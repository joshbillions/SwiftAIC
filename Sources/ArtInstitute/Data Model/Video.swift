//
// Video.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct Video: Codable {
    /** Unique identifier of this resource. Taken from the source system. */
    public let _id: Int

    /** Unique UUID of this resource in LAKE, our DAMS. */
    public let lakeGuid: UUID?

    /** REST API resource type or endpoint */
    public let apiModel: String

    /** REST API link for this resource */
    public let apiLink: String

    /** The name of this resource */
    public let title: String

    /** Type always takes one of the following values: image, sound, text, video */
    public let type: String?

    /** Explanation of what this asset is */
    public let _description: String?

    /** Alternative text for the asset to describe it to people with low or no vision */
    public let altText: String?

    /** Text of or URL to the contents of this asset */
    public let content: String?

    /** Statement notifying how the asset is protected by copyright. Applies to the asset itself, not artwork it may be related to. */
    public let copyrightNotice: String?

    /** Whether this resource is considered to be multimedia */
    public let isMultimediaResource: Bool?

    /** Whether this resource is considered to be educational */
    public let isEducationalResource: Bool?

    /** Whether this resource is considered to be educational */
    public let isTeacherResource: Bool?

    /** Arbitrary unique identifier that changes when the binary file gets updated */
    public let contentETag: String?

    /** Date and time the associated binary file was updated */
    public let contentModifiedAt: Date?

    /** Unique identifiers of the artworks associated with this asset */
    public let artworkIds: [Int]?

    /** Names of the artworks associated with this asset */
    public let artworkTitles: [String]?

    /** Date and time the resource was updated in the LAKE LPM Solr index, which is our direct source of data */
    public let lastUpdatedSource: Date?

    /** Date and time the record was updated in the aggregator database */
    public let lastUpdated: Date?

    /** Date and time the record was updated in the aggregator search index */
    public let timestamp: Date?

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case lakeGuid = "lake_guid"
        case apiModel = "api_model"
        case apiLink = "api_link"
        case title
        case type
        case _description = "description"
        case altText = "alt_text"
        case content
        case copyrightNotice = "copyright_notice"
        case isMultimediaResource = "is_multimedia_resource"
        case isEducationalResource = "is_educational_resource"
        case isTeacherResource = "is_teacher_resource"
        case contentETag = "content_e_tag"
        case contentModifiedAt = "content_modified_at"
        case artworkIds = "artwork_ids"
        case artworkTitles = "artwork_titles"
        case lastUpdatedSource = "last_updated_source"
        case lastUpdated = "last_updated"
        case timestamp
    }

}
