//
// Artwork.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

public struct Artwork: Codable {

    /** Unique identifier of this resource. Taken from the source system. */
    public let _id: Int

    /** REST API resource type or endpoint */
    public let apiModel: String

    /** REST API link for this resource */
    public let apiLink: String

    /** Whether this document should be boosted in search */
    public let isBoosted: Bool

    /** The name of this resource */
    public let title: String

    /** Alternate names for this work */
    public let altTitles: [String]?

    /** Thumbnail for showing this entity in search results. Currently, all thumbnails are IIIF images, but this may change in the future, so check &#x60;type&#x60; before proceeding. */
    public let thumbnail: [Thumbnail]?

    /** Unique identifier assigned to the artwork upon acquisition */
    public let mainReferenceNumber: String?

    /** Approx. number of times this artwork was viewed on our website since Jan 1st, 2010 */
    public let pageviews: Int?

    /** Approx. number of times this artwork was viewed on our website over the past three months */
    public let pageviewsRecent: Int?

    /** Whether the artwork hasn&#x27;t been visited on our website very much */
    public let hasNotBeenViewedMuch: Bool?

    /** Manual indication of what rank this artwork should take in search results. Noncontiguous. */
    public let boostRank: Int?

    /** The year of the period of time associated with the creation of this work */
    public let dateStart: Int?

    /** The year of the period of time associated with the creation of this work */
    public let dateEnd: Int?

    /** Readable, free-text description of the period of time associated with the creation of this work. This might include date terms like Dynasty, Era etc. Written by curators and editors in house style, and is the preferred field for display on websites and apps.  */
    public let dateDisplay: String?

    /** Readable description of the creator of this work. Includes artist names, nationality and lifespan dates */
    public let artistDisplay: String?

    /** The location where the creation, design, or production of the work took place, or the original location of the work */
    public let placeOfOrigin: String?

    /** Longer explanation describing the work */
    public let _description: String?

    /** The size, shape, scale, and dimensions of the work. May include multiple dimensions like overall, frame, or dimension for each section of a work. Free-form text formatted in a house style. */
    public let dimensions: String?

    /** The substances or materials used in the creation of a work */
    public let mediumDisplay: String?

    /** A description of distinguishing or identifying physical markings that are on the work */
    public let inscriptions: String?

    /** Brief statement indicating how the work came into the collection */
    public let creditLine: String?

    /** Bibliographic list of all the places this work has been published */
    public let publicationHistory: String?

    /** List of all the places this work has been exhibited */
    public let exhibitionHistory: String?

    /** Ownership/collecting history of the work. May include names of owners, dates, and possibly methods of transfer of ownership. Free-form text formatted in a house style. */
    public let provenanceText: String?

    /** Indicator of how much metadata on the work in published. Web Basic is the least amount, Web Everything is the greatest. */
    public let publishingVerificationLevel: String?

    /** An internal department id we use for analytics. Does not correspond to departments on the website. */
    public let internalDepartmentId: Int?

    /** The works status of belonging to our collection. Values include \&quot;Permanent Collection\&quot;, \&quot;Ryerson Collection\&quot;, and \&quot;Long-term Loan\&quot;. */
    public let collectionStatus: String?

    /** The fiscal year in which the work was acquired. */
    public let fiscalYear: Int?

    /** The fiscal year in which the work was deaccessioned. */
    public let fiscalYearDeaccession: Int?

    /** Whether the work is in the public domain, meaning it was created before copyrights existed or has left the copyright term */
    public let isPublicDomain: Bool?

    /** Whether images of the work are allowed to be displayed in a zoomable interface. */
    public let isZoomable: Bool?

    /** The maximum size of the window the image is allowed to be viewed in, in pixels. */
    public let maxZoomWindowSize: Int?

    /** Statement notifying how the work is protected by copyright. Applies to the work itself, not image or other related assets. */
    public let copyrightNotice: String?

    /** Whether this artwork has any associated microsites, digital publications, or documents tagged as multimedia */
    public let hasMultimediaResources: Bool?

    /** Whether this artwork has any documents tagged as educational */
    public let hasEducationalResources: Bool?

    /** Unbounded positive float representing an abstract measure of colorfulness. */
    public let colorfulness: Double?

    /** Dominant color of this artwork in HSL */
    public let color: String?

    /** Latitude coordinate of the location of this work in our galleries */
    public let latitude: Double?

    /** Longitude coordinate of the location of this work in our galleries */
    public let longitude: Double?

    /** Latitude and longitude coordinates of the location of this work in our galleries */
    public let latlon: String?

    /** Whether the work is on display */
    public let isOnView: Bool

    /** The location of this work in our museum */
    public let galleryTitle: String?

    /** Unique identifier of the location of this work in our museum */
    public let galleryId: Int?

    /** The kind of object or work (e.g. Painting, Sculpture, Book) */
    public let artworkTypeTitle: String?

    /** Unique identifier of the kind of object or work */
    public let artworkTypeId: Int?

    /** Name of the curatorial department that this work belongs to */
    public let departmentTitle: String?

    /** Unique identifier of the curatorial department that this work belongs to */
    public let departmentId: Int?

    /** Unique identifier of the preferred artist/culture associated with this work */
    public let artistId: Int?

    /** Name of the preferred artist/culture associated with this work */
    public let artistTitle: String?

    /** Unique identifiers of the non-preferred artists/cultures associated with this work */
    public let altArtistIds: [Int]?

    /** Unique identifier of all artist/cultures associated with this work */
    public let artistIds: [Int]?

    /** Names of all artist/cultures associated with this work */
    public let artistTitles: [String]?

    /** Unique identifiers of the categories this work is a part of */
    public let categoryIds: [Int]?

    /** Names of the categories this artwork is a part of */
    public let categoryTitles: [String]?

    /** This list represents all the catalogues this work is included in. This isn&#x27;t an exhaustive list of publications where the work has been mentioned. For that, see &#x60;publication_history&#x60;. */
    public let artworkCatalogueIds: [Int]?

    /** The names of the taxonomy tags for this work */
    public let termTitles: [String]?

    /** Unique identifier of the preferred style term for this work */
    public let styleId: Int?

    /** The name of the preferred style term for this work */
    public let styleTitle: String?

    /** Unique identifiers of all other non-preferred style terms for this work */
    public let altStyleIds: [Int]?

    /** Unique identifiers of all style terms for this work */
    public let styleIds: [Int]?

    /** The names of all style terms related to this artwork */
    public let styleTitles: [String]?

    /** Unique identifier of the preferred classification term for this work */
    public let classificationId: Int?

    /** The name of the preferred classification term for this work */
    public let classificationTitle: String?

    /** Unique identifiers of all other non-preferred classification terms for this work */
    public let altClassificationIds: [Int]?

    /** Unique identifiers of all classification terms for this work */
    public let classificationIds: [Int]?

    /** The names of all classification terms related to this artwork */
    public let classificationTitles: [String]?

    /** Unique identifier of the preferred subject term for this work */
    public let subjectId: Int?

    /** Unique identifiers of all other non-preferred subject terms for this work */
    public let altSubjectIds: [Int]?

    /** Unique identifiers of all subject terms for this work */
    public let subjectIds: [Int]?

    /** The names of all subject terms related to this artwork */
    public let subjectTitles: [String]?

    /** Unique identifier of the preferred material term for this work */
    public let materialId: Int?

    /** Unique identifiers of all other non-preferred material terms for this work */
    public let altMaterialIds: [Int]?

    /** Unique identifiers of all material terms for this work */
    public let materialIds: [Int]?

    /** The names of all material terms related to this artwork */
    public let materialTitles: [String]?

    /** Unique identifier of the preferred technique term for this work */
    public let techniqueId: Int?

    /** Unique identifiers of all other non-preferred technique terms for this work */
    public let altTechniqueIds: [Int]?

    /** Unique identifiers of all technique terms for this work */
    public let techniqueIds: [Int]?

    /** The names of all technique terms related to this artwork */
    public let techniqueTitles: [String]?

    /** The names of all thematic publish categories related to this artwork */
    public let themeTitles: [String]?

    /** Unique identifier of the preferred image to use to represent this work */
    public let imageId: Int?

    /** Unique identifiers of all non-preferred images of this work. */
    public let altImageIds: [Int]?

    /** Unique identifiers of assets that serve as documentation for this artwork */
    public let documentIds: [Int]?

    /** Unique identifiers of the audio about this work */
    public let soundIds: [Int]?

    /** Unique identifiers of the videos about this work */
    public let videoIds: [Int]?

    /** Unique identifiers of the texts about this work */
    public let textIds: [Int]?

    /** Unique identifiers of the digital publication chapters this work in included in */
    public let sectionIds: [Int]?

    /** Names of the digital publication chapters this work is included in */
    public let sectionTitles: [String]?

    /** Unique identifiers of the microsites this work is a part of */
    public let siteIds: [Int]?


    /** Date and time the resource was updated in the source system */
    public let lastUpdatedSource: Date?

    /** Date and time the record was updated in the aggregator database */
    public let lastUpdated: Date?

    /** Date and time the record was updated in the aggregator search index */
    public let timestamp: Date?

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case apiModel = "api_model"
        case apiLink = "api_link"
        case isBoosted = "is_boosted"
        case title
        case altTitles = "alt_titles"
        case thumbnail
        case mainReferenceNumber = "main_reference_number"
        case pageviews
        case pageviewsRecent = "pageviews_recent"
        case hasNotBeenViewedMuch = "has_not_been_viewed_much"
        case boostRank = "boost_rank"
        case dateStart = "date_start"
        case dateEnd = "date_end"
        case dateDisplay = "date_display"
        case artistDisplay = "artist_display"
        case placeOfOrigin = "place_of_origin"
        case _description = "description"
        case dimensions
        case mediumDisplay = "medium_display"
        case inscriptions
        case creditLine = "credit_line"
        case publicationHistory = "publication_history"
        case exhibitionHistory = "exhibition_history"
        case provenanceText = "provenance_text"
        case publishingVerificationLevel = "publishing_verification_level"
        case internalDepartmentId = "internal_department_id"
        case collectionStatus = "collection_status"
        case fiscalYear = "fiscal_year"
        case fiscalYearDeaccession = "fiscal_year_deaccession"
        case isPublicDomain = "is_public_domain"
        case isZoomable = "is_zoomable"
        case maxZoomWindowSize = "max_zoom_window_size"
        case copyrightNotice = "copyright_notice"
        case hasMultimediaResources = "has_multimedia_resources"
        case hasEducationalResources = "has_educational_resources"
        case colorfulness
        case color
        case latitude
        case longitude
        case latlon
        case isOnView = "is_on_view"
        case galleryTitle = "gallery_title"
        case galleryId = "gallery_id"
        case artworkTypeTitle = "artwork_type_title"
        case artworkTypeId = "artwork_type_id"
        case departmentTitle = "department_title"
        case departmentId = "department_id"
        case artistId = "artist_id"
        case artistTitle = "artist_title"
        case altArtistIds = "alt_artist_ids"
        case artistIds = "artist_ids"
        case artistTitles = "artist_titles"
        case categoryIds = "category_ids"
        case categoryTitles = "category_titles"
        case artworkCatalogueIds = "artwork_catalogue_ids"
        case termTitles = "term_titles"
        case styleId = "style_id"
        case styleTitle = "style_title"
        case altStyleIds = "alt_style_ids"
        case styleIds = "style_ids"
        case styleTitles = "style_titles"
        case classificationId = "classification_id"
        case classificationTitle = "classification_title"
        case altClassificationIds = "alt_classification_ids"
        case classificationIds = "classification_ids"
        case classificationTitles = "classification_titles"
        case subjectId = "subject_id"
        case altSubjectIds = "alt_subject_ids"
        case subjectIds = "subject_ids"
        case subjectTitles = "subject_titles"
        case materialId = "material_id"
        case altMaterialIds = "alt_material_ids"
        case materialIds = "material_ids"
        case materialTitles = "material_titles"
        case techniqueId = "technique_id"
        case altTechniqueIds = "alt_technique_ids"
        case techniqueIds = "technique_ids"
        case techniqueTitles = "technique_titles"
        case themeTitles = "theme_titles"
        case imageId = "image_id"
        case altImageIds = "alt_image_ids"
        case documentIds = "document_ids"
        case soundIds = "sound_ids"
        case videoIds = "video_ids"
        case textIds = "text_ids"
        case sectionIds = "section_ids"
        case sectionTitles = "section_titles"
        case siteIds = "site_ids"
        case lastUpdatedSource = "last_updated_source"
        case lastUpdated = "last_updated"
        case timestamp
    }

}
